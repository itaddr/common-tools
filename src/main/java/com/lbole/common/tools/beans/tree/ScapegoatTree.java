package com.lbole.common.tools.beans.tree;

/**
 * 替罪羊数
 * 替罪羊树是计算机科学中，一种基于部分重建的自平衡二叉搜索树。在替罪羊树上，插入或删除节点的平摊最坏时间复杂度是O(log n)，搜索节点的最坏时间复杂度是O(log n)。
 * 在非平衡的二叉搜索树中，每次操作以后检查操作路径，找到最高的满足max(size(son_L),size(son_R))>alpha*size(this)的结点，重建整个子树。这样就得到了替罪羊树，而被重建的子树的原来的根就被称为替罪羊节点。
 * 对于一棵二叉搜索树，最重要的事情就是维护他的平衡，以保证对于每次操作（插入，查找，删除）的时间均摊下来都是乃至（红黑树，但是常数大而且难写，此处不展开介绍）。
 * 为了维护树的平衡，各种平衡二叉树绞尽脑汁方法五花八门，但几乎都是通过旋转的操作来实现，只不过是在判断什么时候应该旋转上有所不同。但替罪羊树就是那么一棵特立独行的猪，哦不，是一只特立独行的树。
 *
 * @Author 马嘉祺
 * @Date 2020/9/25 0025 14 15
 * @Description <p></p>
 */
public class ScapegoatTree {
}
